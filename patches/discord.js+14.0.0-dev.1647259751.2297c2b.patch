diff --git a/node_modules/discord.js/src/structures/ModalSubmitInteraction.js b/node_modules/discord.js/src/structures/ModalSubmitInteraction.js
index 2f08898..fd3e357 100644
--- a/node_modules/discord.js/src/structures/ModalSubmitInteraction.js
+++ b/node_modules/discord.js/src/structures/ModalSubmitInteraction.js
@@ -5,6 +5,7 @@ const Interaction = require('./Interaction');
 const InteractionWebhook = require('./InteractionWebhook');
 const ModalSubmitFieldsResolver = require('./ModalSubmitFieldsResolver');
 const InteractionResponses = require('./interfaces/InteractionResponses');
+const Components = require('../util/Components');
 
 /**
  * @typedef {Object} ModalFieldData
@@ -40,7 +41,7 @@ class ModalSubmitInteraction extends Interaction {
      * The components within the modal
      * @type {ActionRow[]}
      */
-    this.components = data.data.components?.map(c => createComponent(c)) ?? [];
+    this.components = data.data.components?.map(c => Components.createComponent(c)) ?? [];
 
     /**
      * The fields within the modal
@@ -96,14 +97,14 @@ class ModalSubmitInteraction extends Interaction {
 
   // These are here only for documentation purposes - they are implemented by InteractionResponses
   /* eslint-disable no-empty-function */
-  deferReply() {}
-  reply() {}
-  fetchReply() {}
-  editReply() {}
-  deleteReply() {}
-  followUp() {}
-  deferUpdate() {}
-  update() {}
+  deferReply() { }
+  reply() { }
+  fetchReply() { }
+  editReply() { }
+  deleteReply() { }
+  followUp() { }
+  deferUpdate() { }
+  update() { }
 }
 
 InteractionResponses.applyToClass(ModalSubmitInteraction, 'showModal');
diff --git a/node_modules/discord.js/src/util/Components.js b/node_modules/discord.js/src/util/Components.js
index 95c0044..14e78d0 100644
--- a/node_modules/discord.js/src/util/Components.js
+++ b/node_modules/discord.js/src/util/Components.js
@@ -75,6 +75,8 @@ class Components extends null {
         return new ButtonComponent(data);
       case ComponentType.SelectMenu:
         return new SelectMenuComponent(data);
+      case ComponentType.TextInput:
+        return new TextInputComponent(data);
       default:
         throw new Error(`Found unknown component type: ${data.type}`);
     }
@@ -87,3 +89,4 @@ const ActionRow = require('../structures/ActionRow');
 const ButtonComponent = require('../structures/ButtonComponent');
 const Component = require('../structures/Component');
 const SelectMenuComponent = require('../structures/SelectMenuComponent');
+const TextInputComponent = require('../structures/TextInputComponent');
\ No newline at end of file
